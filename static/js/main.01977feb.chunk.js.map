{"version":3,"sources":["App.js","Select/data.js","Select/SelectComponent.js","Table/data.js","Table/Table.js","Profile/FilterMultiSelect.js","Routes/Route.js","serviceWorker.js","index.js","logo.svg","Profile/UserCard.js"],"names":["App","Country","name","country_code","City","state_code","States","useStyles","makeStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","ControlledOpenSelect","classes","React","useState","countryData","setCountry","stateData","setStateData","cityData","setCity","data","country","states","setStateArray","city","setCityArray","useEffect","generateStateData","countryArr","filteredCountryArr","filter","countArr","console","log","push","filteredStateArr","filterState","filtCountryArr","length","generateCityData","stateArr","filteredCityArr","filtrState","Container","maxWidth","Grid","container","item","xs","sm","md","FormControl","className","InputLabel","id","Select","labelId","value","multiple","onChange","event","target","map","index","MenuItem","key","agency","patientID","branch","detail1","detail2","detail3","detail4","TableComponent","props","setGroupBy","setState","groupByCol","setGroupByAgency","state","sorted","page","pageSize","expanded","resized","filtered","resetState","bind","this","onClick","makeData","columns","Header","accessor","filterable","Aggregated","row","d","width","PivotValue","pivotBy","defaultPageSize","onSortedChange","onPageChange","onPageSizeChange","onExpandedChange","onResizedChange","onFilteredChange","defaultFilterMethod","column","pivotId","undefined","String","toLowerCase","indexOf","Component","animatedComponents","makeAnimated","filterValue","label","color","isFixed","AnimatedMulti","filterData","setFilterValue","historyFilter","setHistoryFilter","reset","setReset","history","JSON","parse","localStorage","getItem","historyArray","filterId","userId","Fragment","closeMenuOnSelect","components","isClearable","isMulti","options","filters","setItem","stringify","UserCard","Routes","style","to","path","Table","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports","filterArr","tempUserArray","userData","filteredArr","filterVal","forEach","user","eval","field","condition","age","gender","salary","designation","experience","prevState","prevProps","variant","component"],"mappings":"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","file":"static/js/main.01977feb.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const  Country=[\r\n    {\r\n        name:\"India\",\r\n        country_code:\"IN\"\r\n    },\r\n    {\r\n        name:\"Australia\",\r\n        country_code:\"AU\"\r\n    },\r\n    {\r\n        name:\"Indonesia\",\r\n        country_code:\"ID\"\r\n    },\r\n    {\r\n        name:\"New Zealand\",\r\n        country_code:\"NZ\"\r\n    },\r\n    {\r\n        name:\"Nigeria\",\r\n        country_code:\"NG\"\r\n    },\r\n    {\r\n        name:\"United States\",\r\n        country_code:\"US\"\r\n    },\r\n    \r\n    {\r\n        name:\"Lebanon\",\r\n        country_code:\"LB\"\r\n    },\r\n];\r\n const States=[\r\n    {\r\n    name:\"Tamil Nadu\",\r\n    country_code: \"IN\",\r\n    state_code: \"TN\"\r\n    },\r\n        {\r\n            name:\"Telangana\",\r\n            country_code: \"IN\",\r\n            state_code: \"TG\"\r\n            },\r\n            {\r\n                name:\"Uttar Pradesh\",\r\n                country_code: \"IN\",\r\n                state_code: \"UP\"\r\n                },\r\n                {\r\n                    name:\"Karnataka\",\r\n                    country_code: \"IN\",\r\n                    state_code: \"KA\"\r\n                    },\r\n                    {\r\n                        name:\"Austria\",\r\n                        country_code:\"AU\",\r\n                        state_code:\"AUS\",\r\n                    }\r\n                \r\n\r\n];\r\nconst  City=[\r\n    {\r\n        name:\"Vellore\",\r\n        country_code: \"IN\",\r\n        state_code: \"TN\"\r\n\r\n    },\r\n    {\r\n        name:\"Bangalore\",\r\n        \r\n        country_code: \"IN\",\r\n        state_code: \"KA\"\r\n\r\n    },\r\n    {\r\n        name:\"Chennai\",\r\n        country_code: \"IN\",\r\n        state_code: \"TN\"\r\n    },\r\n    {\r\n        name:\"Tiruchirappalli\",\r\n        country_code: \"IN\",\r\n        state_code: \"TN\"\r\n    },\r\n    {\r\n        name:\"Austin city\",\r\n        country_code:\"AU\",\r\n        state_code:\"AUS\",\r\n\r\n    }\r\n];\r\nexport default {Country,City,States};","import React,{useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport data from './data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function ControlledOpenSelect() {\r\n  const classes = useStyles();\r\n  \r\n  const [countryData,setCountry]=React.useState([]);\r\n  const [stateData,setStateData]=React.useState([]);\r\n  const [cityData,setCity]=React.useState([]);\r\n  const [country,setCountryArray]=React.useState(data.Country);\r\n  const [states,setStateArray]=React.useState([]);\r\n  const [city,setCityArray]=React.useState([]);\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChangeCountry = (event) => {\r\n    console.log(event.target.value)\r\n    if(event.target.value){ \r\n    setCountry(event.target.value);\r\n    }\r\n    else{\r\n      setCountry([]);\r\n      setStateData([]);\r\n      setCity([]);\r\n      setStateArray([]);\r\n      setCityArray([])\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    generateStateData(countryData);\r\n  }, [countryData]);\r\n\r\n\r\n  const handleChangeCity=(event)=>{\r\n    setCity(event.target.value);\r\n  }\r\n  const generateStateData=(countryArr)=>{\r\n    setStateData([]);\r\n    const filteredCountryArr=[];\r\n    const filteredCountry=country.filter(country=>{\r\n      countryArr.filter(countArr=>{\r\n        console.log(countArr,country)\r\n        if(country.name===countArr){\r\n          filteredCountryArr.push(country);\r\n        }\r\n      });\r\n      \r\n   });\r\n   console.log(filteredCountryArr) \r\n   const filteredStateArr=[];\r\n   const filteredState=data.States.filter(filterState=>{\r\n    filteredCountryArr.filter(filtCountryArr=>{\r\n      if(filterState.country_code===filtCountryArr.country_code) {\r\n        filteredStateArr.push(filterState);\r\n      }\r\n    })\r\n  });\r\n  filteredStateArr.length>0 && setCityArray([]);setCity([]);\r\n  filteredStateArr.length>0 && setStateArray(filteredStateArr);\r\n  \r\n  }\r\n  const handleChangeState=(event)=>{\r\n    if(event.target.value){\r\n      setStateData(event.target.value);\r\n    }else{\r\n      setStateData([]);\r\n      setCity([]);\r\n      setCityArray([])\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    generateCityData(stateData);\r\n  }, [stateData]);\r\n\r\n\r\n  const generateCityData=(stateArr)=>{\r\n    const filteredStateArr=[];\r\n    const filteredState=states.filter(filterState=>{\r\n      stateArr.filter(city=>{\r\n        if(filterState.name===city) {\r\n          filteredStateArr.push(filterState);\r\n        }\r\n      })\r\n    });\r\n\r\n    const filteredCityArr=[];\r\n    const filteredCity=data.City.filter(city=>{\r\n\r\n      filteredStateArr.filter(filtrState=>{\r\n\r\n        if(city.state_code===filtrState.state_code){\r\n          filteredCityArr.push(city);\r\n        }\r\n      })\r\n    });\r\n    filteredCityArr.length>0 && setCityArray(filteredCityArr)\r\n  }\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container spacing={12}>\r\n      <Grid item xs={6} sm={3} md={4}>\r\n  \r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-controlled-open-select-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          value={countryData}\r\n          multiple\r\n          onChange={handleChangeCountry}\r\n        >\r\n          {/* <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem> */}\r\n          {country.map((data, index) =>\r\n            <MenuItem key={data.name} value={data.name} >{data.name}</MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6} sm={3} md={4}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-controlled-open-select-label\">States</InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          value={stateData}\r\n          multiple\r\n          onChange={handleChangeState}\r\n        >\r\n          {/* <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem> */}\r\n          {states.map((data, index) =>\r\n            <MenuItem key={data.name} value={data.name} >{data.name}</MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6} sm={3} md={4}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-controlled-open-select-label\">City</InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          multiple\r\n          value={cityData}\r\n          onChange={handleChangeCity}\r\n        >\r\n          {/* <MenuItem value=''>\r\n            <em>None</em>\r\n          </MenuItem> */}\r\n          {city.map((data, index) =>\r\n            <MenuItem key={data.name} value={data.name} >{data.name}</MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n      </Grid>\r\n      </Container>\r\n  );\r\n}\r\n","export default [\r\n    {\r\n      agency: \"Alpha\",\r\n      patientID: 1,\r\n      branch: \"bangalore\",\r\n      detail1: \"B+\",\r\n      detail2: \"blood\",\r\n      detail3: \"fever\",\r\n      detail4: \"cold\"\r\n    },\r\n    {\r\n      agency: \"Testing Alpha\",\r\n      patientID: 2,\r\n      branch: \"bangalore\",\r\n      detail1: \"testing\",\r\n      detail2: \"lab\",\r\n      detail3: \"report\",\r\n      detail4: \"testlab\"\r\n    },\r\n    {\r\n      agency: \"Testing Alpha\",\r\n      patientID: 2,\r\n      branch: \"vellore\",\r\n      detail1: \"testing\",\r\n      detail2: \"lab\",\r\n      detail3: \"report\",\r\n      detail4: \"testlab\"\r\n    },\r\n    {\r\n      agency: \"Testing Alpha\",\r\n      patientID: 2,\r\n      branch: \"ranipet\",\r\n      detail1: \"testing\",\r\n      detail2: \"lab\",\r\n      detail3: \"report\",\r\n      detail4: \"testlab\"\r\n    },\r\n    {\r\n      agency: \"beta Test\",\r\n      patientID: 3,\r\n      branch: \"chennai\",\r\n      detail1: 2008,\r\n      detail2: 2008,\r\n      detail3: 2008,\r\n      detail4: 2008\r\n    },\r\n    {\r\n      agency: \"Gamma Test\",\r\n      patientID: 4,\r\n      branch: \"chennai\",\r\n      detail1: 2008,\r\n      detail2: 2008,\r\n      detail3: 2008,\r\n      detail4: 2008\r\n    },\r\n    {\r\n      agency: \"Lab Report\",\r\n      patientID: 5,\r\n      branch: \"Delhi\",\r\n      detail1: 2008,\r\n      detail2: 2008,\r\n      detail3: 2008,\r\n      detail4: 2008\r\n    }\r\n  ];\r\n  ","import React, { Component } from 'react';\r\nimport makeData from \"./data\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst makeDefaultState = () => ({\r\n  sorted: [],\r\n  page: 0,\r\n  pageSize: 10,\r\n  expanded: {},\r\n  resized: [],\r\n  filtered: [],\r\n  groupByCol: []\r\n});\r\n\r\nclass TableComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = makeDefaultState();\r\n\r\n    this.resetState = this.resetState.bind(this);\r\n  }\r\n  resetState() {\r\n    this.setState(makeDefaultState());\r\n  }\r\n  setGroupBy = () => {\r\n    this.setState({\r\n      groupByCol: [\"branch\",\"agency\"]\r\n    });\r\n  };\r\n  setGroupByAgency = () => {\r\n    this.setState({\r\n      groupByCol: [\"agency\",\"branch\"]\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <button onClick={this.resetState}>Reset State</button>\r\n          <button onClick={this.setGroupBy}>GroupBy Branch</button>\r\n          <button onClick={this.setGroupByAgency}>GroupBy Agency</button>\r\n        </div>\r\n        {/* <pre>\r\n          <code>\r\n            <strong>this.state ===</strong>{\" \"}\r\n            {JSON.stringify(this.state, null, 2)}\r\n          </code>\r\n        </pre> */}\r\n        <ReactTable\r\n          data={makeData}\r\n          columns={[\r\n            {\r\n              Header: \"Agency\",\r\n              accessor: \"agency\",\r\n              filterable:true,\r\n              Aggregated: row => {\r\n                return <span>{row.value}</span>;\r\n              }\r\n            },\r\n\r\n            {\r\n              Header: \"Patient ID\",\r\n              id: \"patientID\",\r\n              accessor: d => d.patientID,\r\n              width: 170,\r\n              PivotValue: row => <span>{row.value}</span>\r\n            },\r\n\r\n            {\r\n              Header: \"branch\",\r\n              accessor: \"branch\",\r\n              filterable:true,\r\n              Aggregated: row => {\r\n                return <span>{row.value}</span>;\r\n              }\r\n            },\r\n            {\r\n              Header: \"Details\",\r\n              accessor: \"detail1\",\r\n              Aggregated: row => {\r\n                return <span>{row.value}</span>;\r\n              }\r\n            },\r\n            {\r\n              Header: \"Details\",\r\n              accessor: \"detail2\",\r\n              Aggregated: row => {\r\n                return <span>{row.value}</span>;\r\n              }\r\n            },\r\n            {\r\n              Header: \"Details\",\r\n              accessor: \"detail3\",\r\n              Aggregated: row => {\r\n                return <span>{row.value}</span>;\r\n              }\r\n            }\r\n          ]}\r\n          pivotBy={this.state.groupByCol}\r\n          // filterable\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n          // Controlled props\r\n          sorted={this.state.sorted}\r\n          page={this.state.page}\r\n          pageSize={this.state.pageSize}\r\n          expanded={this.state.expanded}\r\n          resized={this.state.resized}\r\n          filtered={this.state.filtered}\r\n          // Callbacks\r\n          onSortedChange={sorted => this.setState({ sorted })}\r\n          onPageChange={page => this.setState({ page })}\r\n          onPageSizeChange={(pageSize, page) =>\r\n            this.setState({ page, pageSize })\r\n          }\r\n          onExpandedChange={expanded => this.setState({ expanded })}\r\n          onResizedChange={resized => this.setState({ resized })}\r\n          onFilteredChange={filtered => this.setState({ filtered })}\r\n          defaultFilterMethod={(filter, row, column) => {\r\n            const id = filter.pivotId || filter.id;\r\n            return row[id] !== undefined\r\n              ? String(row[id])\r\n                  .toLowerCase()\r\n                  .indexOf(filter.value.toLowerCase()) !== -1\r\n              : true;\r\n          }}\r\n        />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableComponent;\r\n\r\n\r\n","import React,{useState,useEffect} from 'react';\r\n\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport UserCard from './UserCard';\r\nconst animatedComponents = makeAnimated();\r\nlet filterValue=[{ id:1,value: '{\"field\":\"age\",\"condition\":\"<=\",\"value\":\"30\"}', label: 'Age<30', color: '#00B8D9', isFixed: true },\r\n{id:2, value: '{\"field\":\"gender\",\"condition\":\"===\",\"value\":\"male\"}', label: 'Male', color: '#0052CC'},\r\n{ id:3,value:'{\"field\":\"salary\",\"condition\":\"<=\",\"value\":\"20000\"}', label: 'Salary<20000', color: '#FF5630', isFixed: true },\r\n{ id:4,value: '{\"field\":\"designation\",\"condition\":\"===\",\"value\":\"react\"}', label: 'React', color: '#FF5630', isFixed: true },\r\n{ id:5,value: '{\"field\":\"experience\",\"condition\":\"===\",\"value\":\"2\"}', label: 'Experience=2yrs', color: '#FF5630', isFixed: true }];\r\n\r\n\r\n\r\nexport default function AnimatedMulti() {\r\n  const [filterData,setFilterValue]=React.useState([]);\r\n  const [historyFilter,setHistoryFilter]=React.useState([]);\r\n  const [reset,setReset]=React.useState(false);\r\n  \r\n  const handleSelectChange=(filters)=>{\r\n    if(filters===null){\r\n      setReset(true);\r\n      setHistoryFilter([])\r\n    }\r\n    setHistoryFilter(filters)\r\n    setFilterValue(filters)\r\n    if(reset===true) setReset(false)\r\n    localStorage.setItem('filteredVal',JSON.stringify(filters));\r\n  }\r\n  useEffect(()=>{\r\n    let history=JSON.parse(localStorage.getItem('filteredVal'));\r\n    let historyArray=[];\r\n    if(history!==null){\r\n      \r\n      history.map(filterId=>{\r\n        filterValue.filter(userId=>{\r\n          if(userId.id === filterId.id){\r\n            historyArray.push(userId); \r\n          }\r\n        })\r\n      })\r\n      setHistoryFilter(historyArray)\r\n    }\r\n    \r\n  },[]);\r\n  return (\r\n      <React.Fragment>\r\n    <Container maxWidth=\"sm\">\r\n    \r\n    <Grid item xs={6} sm={3} md={12}>\r\n    <Select\r\n      closeMenuOnSelect={false}\r\n      components={animatedComponents}\r\n      value={historyFilter}\r\n      isClearable={false}\r\n      isMulti\r\n      options={filterValue}\r\n      onChange={handleSelectChange}\r\n    />\r\n    </Grid>\r\n    \r\n\r\n    \r\n    </Container>\r\n    \r\n    <Grid item xs={12} sm={12} md={12}>\r\n    <UserCard filter={filterData} reset={reset}/>\r\n    </Grid>\r\n    \r\n</React.Fragment>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n  import Select from '../Select/SelectComponent';\r\n  import Table from '../Table/Table';\r\n  import Profile from '../Profile/FilterMultiSelect';\r\n  import './styles.css';\r\n  export default function Routes() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <nav>\r\n            <ul style={{display:'inline-flex'}}>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/select\">Select</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/table\">Table</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/profile\">Profiles</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n  \r\n          {/* A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/select\">\r\n              <Select />\r\n            </Route>\r\n            <Route path=\"/table\">\r\n              <Table />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Routes from './Routes/Route';\nimport Select from './Select/SelectComponent'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n  class  UserCard extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        userData:[{name:\"user1\",age:\"30\",gender:\"male\",salary:\"10000\",designation:\"react\",experience:2},\r\n        {name:\"user2\",age:\"20\",gender:\"male\",salary:\"60000\",designation:\"engineer\",experience:6},\r\n        {name:\"user3\",age:\"14\",gender:\"male\",salary:\"90000\",designation:\"admin\"},\r\n        {name:\"user4\",age:\"35\",gender:\"male\",salary:\"100000\",designation:\"it\",experience:2}],\r\n      }\r\n    }\r\n    componentDidMount(){\r\n      let historyFilter=JSON.parse(localStorage.getItem('filteredVal'));\r\n      if(historyFilter!==null){\r\n       this.filterData(historyFilter); \r\n      }\r\n\r\n    }\r\n    componentDidUpdate(prevState,prevProps){\r\n      if(this.props.filter && this.props.filter.length>0 && this.props.filter!==prevState.filter){\r\n        console.log('filterData',this.props.filter)\r\n        this.filterData(this.props.filter);\r\n      }\r\n      if(this.props.reset && prevState.reset!==this.props.reset){\r\n        \r\n        this.setState({\r\n          userData:[{name:\"user1\",age:\"30\",gender:\"male\",salary:\"10000\",designation:\"react\",experience:2},\r\n          {name:\"user2\",age:\"20\",gender:\"male\",salary:\"60000\",designation:\"engineer\",experience:6},\r\n          {name:\"user3\",age:\"14\",gender:\"male\",salary:\"90000\",designation:\"admin\"},\r\n          {name:\"user4\",age:\"35\",gender:\"male\",salary:\"100000\",designation:\"it\",experience:2}],\r\n        });\r\n      }\r\n    }\r\n\r\n    filterData=(data)=>{\r\n      let filterArr=[];\r\n      let tempUserArray = this.state.userData;\r\n      let filteredArr=[];\r\n      data.map(filterVal=>{\r\n        filterArr.push(JSON.parse(filterVal.value))\r\n      });\r\n      if(filterArr){      \r\n        filterArr.forEach((filter)=>{\r\n\t      tempUserArray.filter((user)=>{ \r\n    \t  if(\"'\"+user[filter.field]+\"'\" && eval('\"'+user[filter.field]+'\"' +filter.condition +  '\"' + filter.value+ '\"')){\r\n          filteredArr.push(user);\r\n        }\r\n    });\r\n    tempUserArray=[];\r\n    tempUserArray=filteredArr;\r\n    filteredArr=[];\r\n    });\r\n      }\r\n       this.setState({\r\n      userData:tempUserArray\r\n    },()=>{\r\n      console.log('filtered',this.state.userData,tempUserArray)\r\n    });\r\n    }\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <Grid container  spacing={3}>\r\n        {this.state.userData.map(user=>{\r\n         return (\r\n          \r\n          <Grid item xs={12} sm={12} md={2} spacing={3} style={{margin:'40px'}}>\r\n           <Card style={{maxWidth:'275px'}}>\r\n            <CardContent>\r\n            <Typography variant=\"h5\" component=\"h3\">\r\n            {user.name}\r\n        </Typography>      \r\n            <Typography  color=\"textSecondary\">\r\n                Designation {user.designation}\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n              Gender {user.gender}\r\n        </Typography>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n              Salary {user.salary}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n              Age {user.age}\r\n        </Typography>\r\n            </CardContent>\r\n          </Card>\r\n          </Grid>\r\n          \r\n         );\r\n        })\r\n      }\r\n      </Grid>\r\n      </React.Fragment>\r\n    \r\n  );\r\n  }\r\n    \r\n  }  \r\n  export default UserCard;\r\n"],"sourceRoot":""}