{"version":3,"sources":["logo.svg","App.js","Select/data.js","Select/SelectComponent.js","Table/data.js","Table/Table.js","Routes/Route.js","serviceWorker.js","index.js"],"names":["module","exports","App","Country","name","country_code","City","state_code","States","useStyles","makeStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","ControlledOpenSelect","classes","React","useState","countryData","setCountry","stateData","setStateData","cityData","setCity","data","country","states","setStateArray","city","setCityArray","generateStateData","val","filteredCountry","find","filteredState","filter","filterState","generateCityData","filteredCity","Container","maxWidth","Grid","container","item","xs","sm","md","FormControl","className","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","map","index","key","agency","patientID","branch","detail1","detail2","detail3","detail4","TableComponent","props","setGroupBy","setState","groupByCol","setGroupByAgency","state","sorted","page","pageSize","expanded","resized","filtered","resetState","bind","this","onClick","makeData","columns","Header","accessor","filterable","Aggregated","row","d","width","PivotValue","pivotBy","defaultPageSize","onSortedChange","onPageChange","onPageSizeChange","onExpandedChange","onResizedChange","onFilteredChange","defaultFilterMethod","column","pivotId","undefined","String","toLowerCase","indexOf","Component","Routes","to","path","Table","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bb595629.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const  Country=[\r\n    {\r\n        name:\"India\",\r\n        country_code:\"IN\"\r\n    },\r\n    {\r\n        name:\"Australia\",\r\n        country_code:\"AU\"\r\n    },\r\n    {\r\n        name:\"Indonesia\",\r\n        country_code:\"ID\"\r\n    },\r\n    {\r\n        name:\"New Zealand\",\r\n        country_code:\"NZ\"\r\n    },\r\n    {\r\n        name:\"Nigeria\",\r\n        country_code:\"NG\"\r\n    },\r\n    {\r\n        name:\"United States\",\r\n        country_code:\"US\"\r\n    },\r\n    \r\n    {\r\n        name:\"Lebanon\",\r\n        country_code:\"LB\"\r\n    },\r\n];\r\n const States=[\r\n    {\r\n    name:\"Tamil Nadu\",\r\n    country_code: \"IN\",\r\n    state_code: \"TN\"\r\n    },\r\n        {\r\n            name:\"Telangana\",\r\n            country_code: \"IN\",\r\n            state_code: \"TG\"\r\n            },\r\n            {\r\n                name:\"Uttar Pradesh\",\r\n                country_code: \"IN\",\r\n                state_code: \"UP\"\r\n                },\r\n                {\r\n                    name:\"Karnataka\",\r\n                    country_code: \"IN\",\r\n                    state_code: \"KA\"\r\n                    },\r\n                \r\n\r\n];\r\nconst  City=[\r\n    {\r\n        name:\"Vellore\",\r\n        country_code: \"IN\",\r\n        state_code: \"TN\"\r\n\r\n    },\r\n    {\r\n        name:\"Bangalore\",\r\n        \r\n        country_code: \"IN\",\r\n        state_code: \"KA\"\r\n\r\n    },\r\n    {\r\n        name:\"Chennai\",\r\n        country_code: \"IN\",\r\n        state_code: \"TN\"\r\n    },\r\n    {\r\n        name:\"Tiruchirappalli\",\r\n        country_code: \"IN\",\r\n        state_code: \"TN\"\r\n    },\r\n];\r\nexport default {Country,City,States};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport data from './data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function ControlledOpenSelect() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n  const [countryData,setCountry]=React.useState('');\r\n  const [stateData,setStateData]=React.useState('');\r\n  const [cityData,setCity]=React.useState('');\r\n  const [country,setCountryArray]=React.useState(data.Country);\r\n  const [states,setStateArray]=React.useState([]);\r\n  const [city,setCityArray]=React.useState([]);\r\n\r\n  const handleChangeCountry = (event) => {\r\n    if(event.target.value){\r\n    setCountry(event.target.value);\r\n    event.target.value && generateStateData(event.target.value);\r\n    \r\n    }\r\n    else{\r\n      setCountry('');\r\n      setStateData('');\r\n      setCity('');\r\n      setStateArray([]);\r\n      setCityArray([])\r\n    }\r\n  };\r\n  const handleChangeCity=(event)=>{\r\n    setCity(event.target.value);\r\n  }\r\n  const generateStateData=(val)=>{\r\n    setStateData('');\r\n    const filteredCountry=country.find(country=>{\r\n      if(country.name==val){\r\n        return country;\r\n      }\r\n   }); \r\n   const filteredState=data.States.filter(filterState=>{\r\n    if(filterState.country_code===filteredCountry.country_code) {\r\n      return filterState\r\n    }\r\n  });\r\n  filteredState && setCityArray([]);setCity('');\r\n  filteredState && setStateArray(filteredState);\r\n  \r\n  }\r\n  const handleChangeState=(event)=>{\r\n    if(event.target.value){\r\n      setStateData(event.target.value);\r\n    event.target.value && generateCityData(event.target.value);  \r\n    }else{\r\n      setStateData('');\r\n      setCity('');\r\n      setCityArray([])\r\n    }\r\n    \r\n  }\r\n  const generateCityData=(val)=>{\r\n    const filteredState=states.find(filterState=>{\r\n      if(filterState.name===val) {\r\n        return filterState;\r\n      }\r\n    });\r\n\r\n    const filteredCity=data.City.filter(city=>{\r\n      if(city.state_code===filteredState.state_code){\r\n        return city;\r\n      }\r\n    });\r\n    filteredCity && setCityArray(filteredCity)\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container spacing={12}>\r\n      <Grid item xs={6} sm={3} md={4}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-controlled-open-select-label\">Country</InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          value={countryData}\r\n          onChange={handleChangeCountry}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {country.map((data, index) =>\r\n            <MenuItem key={data.name} value={data.name} >{data.name}</MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6} sm={3} md={4}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-controlled-open-select-label\">States</InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          value={stateData}\r\n          onChange={handleChangeState}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {states.map((data, index) =>\r\n            <MenuItem key={data.name} value={data.name} >{data.name}</MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6} sm={3} md={4}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-controlled-open-select-label\">City</InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          value={cityData}\r\n          onChange={handleChangeCity}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {city.map((data, index) =>\r\n            <MenuItem key={data.name} value={data.name} >{data.name}</MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n      </Grid>\r\n      </Container>\r\n  );\r\n}\r\n","export default [\r\n    {\r\n      agency: \"Alpha\",\r\n      patientID: 1,\r\n      branch: \"bangalore\",\r\n      detail1: \"B+\",\r\n      detail2: \"blood\",\r\n      detail3: \"fever\",\r\n      detail4: \"cold\"\r\n    },\r\n    {\r\n      agency: \"Testing Alpha\",\r\n      patientID: 2,\r\n      branch: \"bangalore\",\r\n      detail1: \"testing\",\r\n      detail2: \"lab\",\r\n      detail3: \"report\",\r\n      detail4: \"testlab\"\r\n    },\r\n    {\r\n      agency: \"Testing Alpha\",\r\n      patientID: 2,\r\n      branch: \"vellore\",\r\n      detail1: \"testing\",\r\n      detail2: \"lab\",\r\n      detail3: \"report\",\r\n      detail4: \"testlab\"\r\n    },\r\n    {\r\n      agency: \"Testing Alpha\",\r\n      patientID: 2,\r\n      branch: \"ranipet\",\r\n      detail1: \"testing\",\r\n      detail2: \"lab\",\r\n      detail3: \"report\",\r\n      detail4: \"testlab\"\r\n    },\r\n    {\r\n      agency: \"beta Test\",\r\n      patientID: 3,\r\n      branch: \"chennai\",\r\n      detail1: 2008,\r\n      detail2: 2008,\r\n      detail3: 2008,\r\n      detail4: 2008\r\n    },\r\n    {\r\n      agency: \"Gamma Test\",\r\n      patientID: 4,\r\n      branch: \"chennai\",\r\n      detail1: 2008,\r\n      detail2: 2008,\r\n      detail3: 2008,\r\n      detail4: 2008\r\n    },\r\n    {\r\n      agency: \"Lab Report\",\r\n      patientID: 5,\r\n      branch: \"Delhi\",\r\n      detail1: 2008,\r\n      detail2: 2008,\r\n      detail3: 2008,\r\n      detail4: 2008\r\n    }\r\n  ];\r\n  ","import React, { Component } from 'react';\r\nimport makeData from \"./data\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst makeDefaultState = () => ({\r\n  sorted: [],\r\n  page: 0,\r\n  pageSize: 10,\r\n  expanded: {},\r\n  resized: [],\r\n  filtered: [],\r\n  groupByCol: []\r\n});\r\n\r\nclass TableComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = makeDefaultState();\r\n\r\n    this.resetState = this.resetState.bind(this);\r\n  }\r\n  resetState() {\r\n    this.setState(makeDefaultState());\r\n  }\r\n  setGroupBy = () => {\r\n    this.setState({\r\n      groupByCol: [\"branch\",\"agency\"]\r\n    });\r\n  };\r\n  setGroupByAgency = () => {\r\n    this.setState({\r\n      groupByCol: [\"agency\",\"branch\"]\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <button onClick={this.resetState}>Reset State</button>\r\n          <button onClick={this.setGroupBy}>GroupBy Branch</button>\r\n          <button onClick={this.setGroupByAgency}>GroupBy Agency</button>\r\n        </div>\r\n        {/* <pre>\r\n          <code>\r\n            <strong>this.state ===</strong>{\" \"}\r\n            {JSON.stringify(this.state, null, 2)}\r\n          </code>\r\n        </pre> */}\r\n        <ReactTable\r\n          data={makeData}\r\n          columns={[\r\n            {\r\n              Header: \"Agency\",\r\n              accessor: \"agency\",\r\n              filterable:true,\r\n              Aggregated: row => {\r\n                return <span>{row.value}</span>;\r\n              }\r\n            },\r\n\r\n            {\r\n              Header: \"Patient ID\",\r\n              id: \"patientID\",\r\n              accessor: d => d.patientID,\r\n              width: 170,\r\n              PivotValue: row => <span>{row.value}</span>\r\n            },\r\n\r\n            {\r\n              Header: \"branch\",\r\n              accessor: \"branch\",\r\n              filterable:true,\r\n              Aggregated: row => {\r\n                return <span>{row.value}</span>;\r\n              }\r\n            },\r\n            {\r\n              Header: \"Details\",\r\n              accessor: \"detail1\",\r\n              Aggregated: row => {\r\n                return <span>{row.value}</span>;\r\n              }\r\n            },\r\n            {\r\n              Header: \"Details\",\r\n              accessor: \"detail2\",\r\n              Aggregated: row => {\r\n                return <span>{row.value}</span>;\r\n              }\r\n            },\r\n            {\r\n              Header: \"Details\",\r\n              accessor: \"detail3\",\r\n              Aggregated: row => {\r\n                return <span>{row.value}</span>;\r\n              }\r\n            }\r\n          ]}\r\n          pivotBy={this.state.groupByCol}\r\n          // filterable\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n          // Controlled props\r\n          sorted={this.state.sorted}\r\n          page={this.state.page}\r\n          pageSize={this.state.pageSize}\r\n          expanded={this.state.expanded}\r\n          resized={this.state.resized}\r\n          filtered={this.state.filtered}\r\n          // Callbacks\r\n          onSortedChange={sorted => this.setState({ sorted })}\r\n          onPageChange={page => this.setState({ page })}\r\n          onPageSizeChange={(pageSize, page) =>\r\n            this.setState({ page, pageSize })\r\n          }\r\n          onExpandedChange={expanded => this.setState({ expanded })}\r\n          onResizedChange={resized => this.setState({ resized })}\r\n          onFilteredChange={filtered => this.setState({ filtered })}\r\n          defaultFilterMethod={(filter, row, column) => {\r\n            const id = filter.pivotId || filter.id;\r\n            return row[id] !== undefined\r\n              ? String(row[id])\r\n                  .toLowerCase()\r\n                  .indexOf(filter.value.toLowerCase()) !== -1\r\n              : true;\r\n          }}\r\n        />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableComponent;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n  import Select from '../Select/SelectComponent';\r\n  import Table from '../Table/Table';\r\n  \r\n  export default function Routes() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/select\">Select</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/table\">Table</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n  \r\n          {/* A <Switch> looks through its children <Route>s and\r\n              renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/select\">\r\n              <Select />\r\n            </Route>\r\n            <Route path=\"/table\">\r\n              <Table />\r\n            </Route>\r\n            {/* <Route path=\"/\">\r\n              <Home />\r\n            </Route> */}\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Routes from './Routes/Route';\nimport Select from './Select/SelectComponent'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}